pipeline {
    agent any

    environment {
        IMAGE_TAG = "v${env.BUILD_NUMBER}"
        PROJECT_NAME = "radwasamir"
        APP_PORT = "2222"
        SLACK_CHANNEL = "#project"
    }

    stages {
        stage('Clean Workspace') {
            steps {
                cleanWs()
            }
        }

        stage('Checkout Code') {
            steps {
                checkout scm
                script {
                    echo "Repository structure:"
                    sh "ls -la"
                    echo "insert-update contents:"
                    sh "ls -la insert-update || true"
                }
            }
        }

        stage('Build Docker Image') {
            steps {
                script {
                    dir("insert-update") {
                        sh "docker build -t ${PROJECT_NAME}:${IMAGE_TAG} ."
                    }
                }
            }
        }

       stage('Test Application') {
           steps {
                dir('insert-update') {
                      sh 'docker run --rm radwasamir:v49 pytest app.py --maxfail=1 --disable-warnings'
                    }
                 }
            }

        stage('Deploy Application') {
            steps {
                dir('insert-update') {
                    script {
                        sh "docker-compose down"
                        sh "docker-compose up -d --build"
                    }
                }
            }
        }
    }

    post {
        always {
            cleanWs()
        }

        success {
            script {
                slackSend(
                    channel: env.SLACK_CHANNEL,
                    color: "good",
                    message: """✅ Deployment Success!
                    |Project: ${PROJECT_NAME}:${IMAGE_TAG}
                    |Port: ${APP_PORT}
                    |<${env.BUILD_URL}|View Build>""".stripMargin(),
                    tokenCredentialId: 'slack',
                    teamDomain: 'internship-dkk8872'
                )
            }
        }

        failure {
            script {
                slackSend(
                    channel: env.SLACK_CHANNEL,
                    color: "danger",
                    message: """❌ Deployment Failed!
                    |Project: ${PROJECT_NAME}
                    |Build: #${env.BUILD_NUMBER}
                    |<${env.BUILD_URL}|Investigate>""".stripMargin(),
                    tokenCredentialId: 'slack',
                    teamDomain: 'internship-dkk8872'
                )
            }
        }
    }
}

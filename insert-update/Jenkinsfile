pipeline {
    agent any

    environment {
        IMAGE_TAG = "v${env.BUILD_NUMBER}"
        PROJECT_NAME = "radwasamir"
        APP_PORT = "2222"
        SLACK_CHANNEL = "#project"  // Specify your Slack channel
    }

    stages {
        stage('Checkout') {
            steps {
                checkout scm
            }
        }

        stage('Verify Files') {
            steps {
                script {
                    if (!fileExists('insert-update/Dockerfile')) {
                        error("Dockerfile not found in insert-update directory")
                    }
                    if (!fileExists('insert-update/docker-compose.yml')) {
                        error("docker-compose.yml not found in insert-update directory")
                    }
                }
            }
        }

        stage('Build Docker Image') {
            steps {
                script {
                    // Build Docker image in the "insert-update" directory
                    docker.build("${PROJECT_NAME}:${IMAGE_TAG}", "insert-update")
                }
            }
        }

        stage('Deploy') {
            steps {
                script {
                    dir('insert-update') {
                        // Stop and clean previous deployment
                        sh "docker-compose down || true"

                        // Start new containers
                        sh "IMAGE_TAG=${IMAGE_TAG} APP_PORT=${APP_PORT} docker-compose up -d"
                    }
                }
            }
        }
    }

    post {
        always {
            cleanWs()
        }
        success {
            script {
                // Get the short commit hash
                def commitHash = sh(script: "git rev-parse --short HEAD", returnStdout: true).trim()

                echo """
                üéâ Successfully deployed ${PROJECT_NAME}:${IMAGE_TAG}
                Access URL: http://your-server:${APP_PORT}
                """

                // Send a Slack notification on success
                slackSend(
                    channel: env.SLACK_CHANNEL,
                    color: "good",
                    message: """‚úÖ Deployment Success!
                    |Project: ${PROJECT_NAME}:${IMAGE_TAG}
                    |Port: ${APP_PORT}
                    |Commit: ${commitHash}
                    |<${env.BUILD_URL}|View Build>""".stripMargin()
                )
            }
        }
        failure {
            script {
                echo """
                ‚ùå Deployment failed!
                Troubleshooting:
                1. Check Dockerfile in insert-update/
                2. Verify docker-compose.yml
                3. Inspect logs: ${env.BUILD_URL}
                """
                
                // Send a Slack notification on failure
                slackSend(
                    channel: env.SLACK_CHANNEL,
                    color: "danger",
                    message: """‚ùå Deployment Failed!
                    |Project: ${PROJECT_NAME}
                    |Build: #${env.BUILD_NUMBER}
                    |<${env.BUILD_URL}|Investigate>""".stripMargin()
                )
            }
        }
    }
}

pipeline {
    agent any

    environment {
        IMAGE_TAG = "v${env.BUILD_NUMBER}"
        PROJECT_NAME = "radwasamir"
        APP_PORT = "2222"
    }

    stages {
        stage('Single Checkout') {
            steps {
                // Single checkout with subdirectory
                checkout([
                    $class: 'GitSCM',
                    branches: [[name: '*/main']],
                    extensions: [
                        [
                            $class: 'RelativeTargetDirectory',
                            relativeTargetDir: 'insert-update'
                        ],
                        [
                            $class: 'SparseCheckoutPaths',
                            sparseCheckoutPaths: [[path: 'insert-update']]
                        ]
                    ],
                    userRemoteConfigs: [[url: 'https://github.com/RadwaSamirr/radwasamir.git']]
                ])
                
                // Debug: Show exactly what was checked out
                sh 'ls -laR insert-update'
            }
        }

        stage('Verify Dockerfile') {
            steps {
                script {
                    // Use absolute path to check
                    def dockerfilePath = "${WORKSPACE}/insert-update/Dockerfile"
                    if (!fileExists(dockerfilePath)) {
                        error("Dockerfile not found at: ${dockerfilePath}")
                    } else {
                        echo "Found Dockerfile at: ${dockerfilePath}"
                    }
                }
            }
        }

        stage('Build Docker Image') {
            steps {
                dir('insert-update') {
                    sh 'ls -la' // Debug
                    docker.build("${PROJECT_NAME}:${IMAGE_TAG}")
                }
            }
        }

        // ... rest of your stages ...
    }

    post {
        always {
            cleanWs()
        }
    }
}
